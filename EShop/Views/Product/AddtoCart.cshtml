@model EShop.Models.ProductDetails
@{
    ViewBag.Title = "AddtoCart";
}



<h2>Add to Cart</h2>



<script type="text/javascript">
     function ValidationForm() {
         var quantity = document.getElementById("Quantity");
         if (quantity.value == 0) {
             alert("Quantity can't be zero");
             return false;
         }
         else {
             return true;
         }
    }
</script>

@using (Html.BeginForm("AddtoCart", "Product", FormMethod.Post))
{
    <div class="form-horizontal">
        <h4>Cart Summary</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model1 => Model.ProductID)

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { @disabled = "disabled" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.EditorFor(model => model.Price, new { @readonly = "readonly" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity)


            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add to Cart" id="AddtoCart"  class="btn btn-default" onclick="return ValidationForm();"/>
            </div>
        </div>
    </div>
}
